@using FitskedApp.Data
@using FitskedApp.Models
@page "/addnewworkout"
@rendermode InteractiveServer
@inject IUserExerciseRepository userExerciseRepository
@inject IUserWorkoutRepository userWorkoutRepository



        <EditForm Model="userExercise">
            <label for="workoutType"> Workout Type: </label>
            <InputSelect id="workoutType" @bind-Value="userExercise.WorkoutType" @bind-Value:after="GetExercisesByWorkoutType">
                @foreach (var type in Enum.GetValues(typeof(WorkoutType)))
                {
                    <option value="@type">@type</option>
                }
            </InputSelect>

            @for (int i = 0; i < numberOfExercisesInWorkout; i++)
            {
                var j = i;
                if (j >= exerciseListForSelectedDay.Count)
                {
                    exerciseListForSelectedDay.Add(new UserExercise());
                }

                <div>
                    <label for="exerciseType"> Exercise Type: </label>
                    <InputSelect id="exerciseType" @bind-Value="exerciseListForSelectedDay[j].ExerciseType" @bind-Value:after="GetExercisesByExerciseType">
                        @foreach (var type in Enum.GetValues(typeof(ExerciseType)))
                        {
                            <option value="@type">@type</option>
                        }
                    </InputSelect>

                    <label for="exerciseName"> Exercise: </label>
                    <InputSelect id="exerciseName" @bind-Value="exerciseListForSelectedDay[j].ExerciseId">
                        @foreach (var exercise in listOfExerciseByExerciseType)
                        {
                            <option value="@exercise.Id">@exercise.Name</option>
                        }
                    </InputSelect>

                    <label for="sets"> Sets: </label>
                    <input type="number" id="sets" @bind="exerciseListForSelectedDay[j].Sets" />

                    <label for="reps"> Reps: </label>
                    <input type="number" id="reps" @bind="exerciseListForSelectedDay[j].Repetitions" />
                </div>
            }
        </EditForm>


@code {
    private string[] daysOfWeek = new string[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" };

    private Plan plan = new Plan();

    private UserExercise userExercise = new();

    private int numberOfExercisesInWorkout = 2;

    private List<UserExercise> exerciseListForSelectedDay = new();

    public List<Exercise> listOfExercisesByWorkoutType = new();

    public List<Exercise> listOfExerciseByExerciseType = new List<Exercise>();

    public async Task GetExercisesByWorkoutType() 
    {
        if (userExercise.WorkoutType != null)
        {
            listOfExercisesByWorkoutType = await userExerciseRepository.GetExercisesBasedOnWorkoutType(userExercise.WorkoutType);
            StateHasChanged();
        }
    }

    public void GetExercisesByExerciseType()
    {
        if (userExercise.ExerciseType != null)
        {
            listOfExerciseByExerciseType = userExerciseRepository.GetExercisesFromWorkoutListBasedOnExerciseType(listOfExercisesByWorkoutType, userExercise.ExerciseType);
            StateHasChanged();
        }
    }

}

