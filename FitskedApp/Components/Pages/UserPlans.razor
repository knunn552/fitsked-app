@page "/user-plans"
@using FitskedApp.Data.Repository
@using FitskedApp.Models
@using FitskedApp.Utilities
@rendermode InteractiveServer
@inject IUserRepository userRepository
@inject IUserPlanRepository planRepository
@inject NavigationManager navigationManager
@inject NavigationLinks NavigationLinks

<PageTitle> My Plans </PageTitle>

<div class="container pt-5">
    <div class="d-flex justify-content-center">
        <h3 class="poppins-bold">My Plans</h3>
    </div>

    <div class="d-flex justify-content-center mt-3">
        <section class="border border-4 border-warning shadow-lg rounded-div p-4 bg-light" style="width: 35rem;">
            <div class="overflow-auto" style="max-height: 400px;">
                @if (planList.Count != 0)
                {
                    @foreach (Plan plan in planList)
                    {
                        <div class="row mt-2 mb-2 m-lg-2 text-center align-items-center rounded-div border border-3 border-danger pt-2 pb-2">
                            <div class="col-6 d-flex justify-content-center">
                                <h6 class="poppins-medium text-truncate" style="max-width: 150px;"> @plan.Name </h6>
                            </div>
                            <div class="col-3">
                                <a href="/edit-plan/@plan.Name/@plan.Id" class="text-decoration-none">
                                    <button class="btn btn-outline-danger poppins-medium w-100">Edit</button>
                                </a>
                            </div>
                            <div class="col-3">
                                <button @onclick="() => DeletePlan(plan.Id)" class="btn btn-outline-danger poppins-medium w-100">Delete</button>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="d-flex justify-content-center align-items-center mt-5 text-center">
                        <h3 class="poppins-bold text-black">No Plans Found</h3>
                    </div>
                    <div class="d-flex justify-content-center mt-2">
                        <p class="poppins-medium text-black">
                            Add one!
                        </p>
                    </div>
                }
            </div>

            <div class="d-flex justify-content-center pt-4">
                <button class="btn btn-danger rounded-pill poppins-medium w-100" @onclick="NavigationLinks.GoToAddPlanPage">
                    Add New Plan
                </button>
            </div>
        </section>
    </div>
</div>


@code {
    string? userId;
    List<Plan> planList = new();
    public string PlanName;

    protected override async Task OnInitializedAsync()
    {
        await LoadUserPlans();
    }

    private async Task LoadUserPlans()
    {
        userId = await userRepository.GetCurrentUserUserId();
        planList = await planRepository.GetAllPlansByUserId(userId);
    }

    private async Task DeletePlan(int planid)
    {
        await planRepository.DeletePlanAsync(planid);
        var planToRemove = planList.FirstOrDefault(e => e.Id == planid);
        planList.Remove(planToRemove);

        StateHasChanged();
    }
}
